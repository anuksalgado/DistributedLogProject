// <auto-generated />
using System;
using DSSystem;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DSSystem.Migrations
{
    [DbContext(typeof(DBManager))]
    [Migration("20250413024103_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("LoginStruct", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Success")
                        .HasColumnType("INTEGER");

                    b.HasKey("Username");

                    b.ToTable("LoginStruct");

                    b.HasData(
                        new
                        {
                            Username = "Wilson",
                            DateTime = new DateTime(2024, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "1234",
                            Success = true
                        },
                        new
                        {
                            Username = "Isak",
                            DateTime = new DateTime(2024, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "1234",
                            Success = true
                        },
                        new
                        {
                            Username = "Burn",
                            DateTime = new DateTime(2024, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "1234",
                            Success = true
                        });
                });

            modelBuilder.Entity("ReceiptStruct", b =>
                {
                    b.Property<string>("ReceiptID")
                        .HasColumnType("TEXT");

                    b.Property<string>("cusName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("puchaseDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ReceiptID");

                    b.ToTable("receiptStruct");

                    b.HasData(
                        new
                        {
                            ReceiptID = "R001",
                            cusName = "Anuk",
                            puchaseDate = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReceiptID = "R002",
                            cusName = "Palmer",
                            puchaseDate = new DateTime(2024, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReceiptID = "R003",
                            cusName = "Jokovic",
                            puchaseDate = new DateTime(2024, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReceiptID = "R004",
                            cusName = "Hazard",
                            puchaseDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReceiptID = "R005",
                            cusName = "Enzo",
                            puchaseDate = new DateTime(2024, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReceiptID = "R006",
                            cusName = "Caicedo",
                            puchaseDate = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReceiptID = "R007",
                            cusName = "Lavia",
                            puchaseDate = new DateTime(2024, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReceiptID = "R008",
                            cusName = "Cech",
                            puchaseDate = new DateTime(2024, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReceiptID = "R009",
                            cusName = "Drogba",
                            puchaseDate = new DateTime(2024, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReceiptID = "R010",
                            cusName = "Lamps",
                            puchaseDate = new DateTime(2024, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReceiptID = "R011",
                            cusName = "Mount",
                            puchaseDate = new DateTime(2024, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReceiptID = "R012",
                            cusName = "Kante",
                            puchaseDate = new DateTime(2024, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReceiptID = "R013",
                            cusName = "Silva",
                            puchaseDate = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReceiptID = "R014",
                            cusName = "Sterling",
                            puchaseDate = new DateTime(2024, 3, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReceiptID = "R015",
                            cusName = "Nkunku",
                            puchaseDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("itemStruct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("MFD")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReceiptStructReceiptID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("itemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptStructReceiptID");

                    b.ToTable("itemStruct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MFD = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R001",
                            itemName = "Tomato",
                            price = 12,
                            quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            MFD = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R002",
                            itemName = "Onion",
                            price = 10,
                            quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            MFD = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R003",
                            itemName = "Cat Food",
                            price = 124,
                            quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            MFD = new DateTime(2023, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R004",
                            itemName = "Coca Cola",
                            price = 13,
                            quantity = 3
                        },
                        new
                        {
                            Id = 5,
                            MFD = new DateTime(2023, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R005",
                            itemName = "Chicken",
                            price = 134,
                            quantity = 2
                        },
                        new
                        {
                            Id = 6,
                            MFD = new DateTime(2023, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R006",
                            itemName = "Onion",
                            price = 10,
                            quantity = 4
                        },
                        new
                        {
                            Id = 7,
                            MFD = new DateTime(2023, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R007",
                            itemName = "Chillies",
                            price = 3,
                            quantity = 1
                        },
                        new
                        {
                            Id = 8,
                            MFD = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R008",
                            itemName = "Tomato",
                            price = 12,
                            quantity = 3
                        },
                        new
                        {
                            Id = 9,
                            MFD = new DateTime(2023, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R009",
                            itemName = "Chicken",
                            price = 134,
                            quantity = 1
                        },
                        new
                        {
                            Id = 10,
                            MFD = new DateTime(2023, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R010",
                            itemName = "Coca Cola",
                            price = 13,
                            quantity = 2
                        },
                        new
                        {
                            Id = 11,
                            MFD = new DateTime(2023, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R011",
                            itemName = "Cat Food",
                            price = 124,
                            quantity = 5
                        },
                        new
                        {
                            Id = 12,
                            MFD = new DateTime(2023, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R012",
                            itemName = "Chillies",
                            price = 3,
                            quantity = 2
                        },
                        new
                        {
                            Id = 13,
                            MFD = new DateTime(2023, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R013",
                            itemName = "Tomato",
                            price = 12,
                            quantity = 1
                        },
                        new
                        {
                            Id = 14,
                            MFD = new DateTime(2023, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R014",
                            itemName = "Onion",
                            price = 10,
                            quantity = 2
                        },
                        new
                        {
                            Id = 15,
                            MFD = new DateTime(2023, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiptStructReceiptID = "R015",
                            itemName = "Coca Cola",
                            price = 13,
                            quantity = 4
                        });
                });

            modelBuilder.Entity("itemStruct", b =>
                {
                    b.HasOne("ReceiptStruct", "ReceiptStruct")
                        .WithMany("items")
                        .HasForeignKey("ReceiptStructReceiptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReceiptStruct");
                });

            modelBuilder.Entity("ReceiptStruct", b =>
                {
                    b.Navigation("items");
                });
#pragma warning restore 612, 618
        }
    }
}
